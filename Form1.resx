<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgSlide.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAPoSURBVHhe7ZzJbtRAFEXDPO6REAvbYpclP8BfsQ3zEAgQcJkwhTkQ5kEgpgV8DWLZ5b0pd3ek
        qPReKXmpfqi67pGulERKlepct112Jz0DAAAAAAAAAAAAAICEwgxO9Bl/OzG05kmKqrZzpbFdn/7r8Y+j
        ozVPUqyXMkk5WvMkBSVlLTHlaM2TFCEpa4khR2uepNiIlLVsRY7WPMlRmvYSJYGLdNdSNe1FajwuWe2O
        ytqeoiRwkR6hlbEnqfG4ZPZKsKd9AaGghAlQNvYMJYGLVI7WKy5JCtOeoyRwEZeg9IpLkqJuz1MSuKCE
        CVCZ9gIlgYu4BKXTXnp03TZ3rr5OSeCCEmIzKuEGJYGLuARjz/pjhZJXCcbe9AWEIpWjtQFIj76ExtaU
        BC4oITauhMJYQ0ngIi5BaReWHq4EdyfbUBK4SOVo7cLSoy+htrcoCVxEcvp5GnuNGo9LPiXMddtLM3hI
        SeAiLUFrK5weq90OV8IjSgIXlBCbUQmPKQlcxCUYu+iPFUpeJdT2CSWByxZeCSo3henhSnBb1KeUBC4o
        ITZ9CY19RkngIi5B6c48PVwJ7j5hhZLABSVE5thSt8uV8JaSwEVcgtLjkeToS3By3lESuKCEyMyudrvd
        gt/7AkKRlqD1jCo5RiW0HygJXFBCZMYlfKQkcJGWoPWgMDnGJXyiJHARl6DxoDBFjix0+9yCv/sCQhHJ
        GT0ofECNxyWvEhr7g5LABSVE5vBSt99dMH9SErighIgUy91et9iv/uJD6d8dG//6xhndI9ymxuMimicl
        Zuu/B91Cf/sLD0V0VGo9EkmJQ/N/Drgj8he1eC449URiePGt7Tdq8Vyk8qumXabG4zL18kXnfMiPg6b8
        wrT3qfG4ZCJ/8IVaPBex/Lq9R43HZerlH13s9kD+f6KXX5nBZ2rxXCA/EsN3w2r7hlo8F6n80rR3qfG4
        ZCG/MPY1tXgucvn2jj9WKFMv//hct9Mt9JW/8FAgPxJD+Y19SS2ei0iK5NlOJkf+qr/wUCA/EkP5tX1B
        LZ6LWL6xS/5YoUy9/OHfgxr73F94KJAfi+GFUOFpo5OPf9DwcfK1HnhBvo+Tr3XnWRl7lRqPC+QTgfxY
        KN78FM1ggRqPy/TLV9x/Q76P4hbQ7aquUONxmX75Dq1dSFkPLlPjcclDvtKFEPIJtM7F7rQzT43HJQv5
        WufizX5WaR7ylU4HkE+gJWWzn56bhXx3wVX5INX+96jxuGQhv2czn8uzlb8e1ponSTZydMY4IrXmSZKQ
        nJhStOZJEkrOJKRozZMk6+VMUorWPEnSC9GQojUPAAAAAAAAAAAAAADxmJn5B+n6ATfz60IVAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>